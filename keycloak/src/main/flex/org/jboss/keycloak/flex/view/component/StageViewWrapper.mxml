<?xml version="1.0"?>
<!--
  Created by christoferdutz on 17.09.15.
-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
         creationComplete="onCreationComplete(event)" resize="onResize(event)">

    <fx:Metadata>
        [Event(name="locationChanged", type="org.jboss.keycloak.flex.event.BrowserEvent")]
    </fx:Metadata>

    <fx:Script>
        <![CDATA[
        import mx.core.FlexGlobals;
        import mx.events.FlexEvent;
        import mx.events.ResizeEvent;

        import org.jboss.keycloak.flex.event.BrowserEvent;

        private var currentUrl:String;
        private var stageWebView:StageWebView;

        [Bindable("locationChanged")]
        public function get url():String {
            return stageWebView ? stageWebView.location : null;
        }

        public function set url(url:String):void {
            if (currentUrl == url) {
                return;
            }

            if (stageWebView) {
                stageWebView.loadURL(url);
            } else {
                currentUrl = url;
            }
        }

        public function close():void {
            stageWebView.stage = null;
            stageWebView.viewPort = null;
            stageWebView.dispose();
            stageWebView = null;
        }

        protected function onCreationComplete(event:FlexEvent):void {
            stageWebView = new StageWebView();
            stageWebView.stage = stage;
            stageWebView.addEventListener(LocationChangeEvent.LOCATION_CHANGE, onBrowserLocationChange);
            stageWebView.addEventListener(LocationChangeEvent.LOCATION_CHANGING, onBrowserLocationChanging);
            if (currentUrl) {
                stageWebView.loadURL(currentUrl);
                currentUrl = null;
            }
            invalidateProperties();
        }

        protected function onResize(event:ResizeEvent):void {
            invalidateProperties();
        }

        override protected function commitProperties():void {
            super.commitProperties();
            if (stageWebView) {
                // It seems this needs to be done or the sizes are not correct.
                var runtimeDPI:int = FlexGlobals.topLevelApplication.runtimeDPI;
                var applicationDPI:int = FlexGlobals.topLevelApplication.applicationDPI;
                var scaleFactor:Number = runtimeDPI / applicationDPI;
                var localPoint:Point = new Point(x, y);
                var globalPoint:Point = localToGlobal(localPoint)
                var browserTop:Number = globalPoint.y;
                var browserLeft:Number = globalPoint.x;
                var browserWidth:Number = width * scaleFactor;
                var browserHeight:Number = height * scaleFactor;
                var viewPort:Rectangle = new Rectangle(browserLeft, browserTop, browserWidth, browserHeight);
                stageWebView.viewPort = viewPort;
            }
        }

        protected function onBrowserLocationChange(event:LocationChangeEvent):void {
            if (event.location.indexOf("http://keycloak.dukecon.org") == 0) {
                event.preventDefault();
                dispatchEvent(new BrowserEvent(BrowserEvent.LOCATION_CHANGED, null, event.location));
            }
        }

        protected function onBrowserLocationChanging(event:LocationChangeEvent):void {
            // Prevent the browser from following the url.
            if (event.location.indexOf("http://keycloak.dukecon.org") == 0) {
                event.preventDefault();
                dispatchEvent(new BrowserEvent(BrowserEvent.LOCATION_CHANGED, null, event.location));
            }
        }
        ]]>
    </fx:Script>

</s:Group>
