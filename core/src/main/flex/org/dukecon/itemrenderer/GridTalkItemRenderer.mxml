<?xml version="1.0"?>
<!--
  Created by christoferdutz on 30.05.15.
-->
<s:GridItemRenderer
        xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:s="library://ns.adobe.com/flex/spark"
        xmlns:parsley="http://www.spicefactory.org/parsley">

    <fx:Metadata>
        [ResourceBundle("dukecon")]
    </fx:Metadata>

    <fx:Declarations>
        <parsley:Configure/>
        <s:DateTimeFormatter id="timeFormatter"
                             locale="{settingsController.selectedLanguage}"
                             dateTimePattern="{resourceManager.getString('dukecon', 'dateTime.time')}"/>
    </fx:Declarations>

    <fx:Script>
    <![CDATA[
        import org.dukecon.controller.ConferenceController;
        import org.dukecon.controller.LocationController;
        import org.dukecon.controller.SettingsController;
        import org.dukecon.controller.TrackController;
        import org.dukecon.controller.UserPreferenceController;
        import org.dukecon.events.ListEvent;
        import org.dukecon.model.Language;
        import org.dukecon.model.Room;
        import org.dukecon.model.Talk;
        import org.dukecon.model.Track;

        [Embed(source="/star-unselected.png")]
        [Bindable]
        public var starUnselected:Class;

        [Embed(source="/star-selected.png")]
        [Bindable]
        public var starSelected:Class;

        [Bindable]
        protected var talk:Talk;

        [Inject]
        public var conferenceController:ConferenceController;

        [Inject]
        public var trackController:TrackController;

        [Inject]
        public var locationController:LocationController;

        [Inject]
        public var userPreferenceController:UserPreferenceController;

        [Inject]
        [Bindable]
        public var settingsController:SettingsController;

        [Bindable("dataChange")]
        override public function get data():Object {
            return super.data;
        }

        override public function set data(value:Object):void {
            super.data = value;
            if (value) {
                talk = Talk(data[column.dataField]);
            }
        }

        override protected function commitProperties():void {
            super.commitProperties();

            if (talk) {
                var room:Room = conferenceController.getRoom(talk.roomId);
                var track:Track = conferenceController.getTrack(talk.trackId);
                var language:Language = conferenceController.getLanguage(talk.languageId);
                var speakers:String = "";
                for each(var speaker:Object in talk.speakerIds) {
                    if (speakers != "") {
                        speakers += ", ";
                    }
                    speakers += speaker.name;
                    if (speaker.company) {
                        speakers += " (" + speaker.company + ")";
                    }
                }

                speakersLabel.text = speakers;
                timeIcon.visible = true;
                timeLabel.text = timeFormatter.format(talk.start) + " - " + timeFormatter.format(talk.end);
                if(room) {
                    locationIcon.source = locationController.getIconForLocation(room.id);
                    locationLabel.text = room.name;
                } else {
                    locationIcon.source = null;
                    locationLabel.text = "";
                }
                if(track) {
                    trackIcon.source = trackController.getIconForTrack(track.id);
                    trackLabel.text = track.names[resourceManager.localeChain[0]];
                } else {
                    trackIcon.source = null;
                    trackLabel.text = "";
                }
                if(language) {
                    languageIcon.visible = language.id == "en";
                    languageLabel.text = language.names[resourceManager.localeChain[0]];
                } else {
                    languageIcon.visible = false;
                    languageLabel.text = "";
                }
            } else {
                speakersLabel.text = "";
                timeIcon.visible = false;
                timeLabel.text = "";
                locationIcon.source = null;
                locationLabel.text = "";
                trackIcon.source = null;
                trackLabel.text = "";
                languageIcon.visible = false;
                languageLabel.text = "";
            }

            updateSelectionIcon();
        }

        protected function updateSelectionIcon():void {
            if (talk) {
                favoriteImage.source = userPreferenceController.isTalkSelected(talk) ? starSelected : starUnselected;
            } else {
                favoriteImage.source = null;
            }
        }

        protected function toggleSelection(event:MouseEvent):void {
            if (userPreferenceController.isTalkSelected(talk)) {
                userPreferenceController.unselectTalk(talk);
            } else {
                userPreferenceController.selectTalk(talk);
            }
            updateSelectionIcon();
        }

        protected function onMoreClicked(event:MouseEvent):void {
            dispatchEvent(new ListEvent(talk, ListEvent.ITEM_SELECTED));
        }
        ]]>
  </fx:Script>

    <s:Rect top="4" left="4" right="4" bottom="4" radiusX="10" radiusY="10" visible="{talk != null}">
        <s:fill>
            <s:SolidColor color="0xffffff"/>
        </s:fill>
        <s:stroke>
            <s:SolidColorStroke color="0x000000"/>
        </s:stroke>
    </s:Rect>

    <s:VGroup top="20" left="20" right="20" bottom="20" gap="20" click="onMoreClicked(event)">
        <s:Label text="{talk.title}" width="480" styleName="talkTitle"/>
        <s:Label id="speakersLabel" width="480" styleName="talkSpeakers"/>
        <s:VGroup width="100%" gap="10">
            <s:HGroup width="100%" gap="20" verticalAlign="middle">
                <s:Image id="timeIcon" source="@Embed('/clock.png')" width="32" height="32"/>
                <s:Label id="timeLabel" styleName="talkTime"/>
            </s:HGroup>
            <s:HGroup width="100%" gap="20" verticalAlign="middle">
                <s:Image id="locationIcon" width="32" height="32"/>
                <s:Label id="locationLabel" styleName="talkLocation"/>
            </s:HGroup>
            <s:HGroup width="100%" gap="20" verticalAlign="middle">
                <s:Image id="trackIcon" width="32" height="32"/>
                <s:Label id="trackLabel" styleName="talkTrack"/>
            </s:HGroup>
            <s:HGroup width="100%" gap="20" verticalAlign="middle">
                <s:Image id="languageIcon" source="@Embed('/english-small.png')" width="32" height="32"/>
                <s:Label id="languageLabel" styleName="talkLanguage"/>
            </s:HGroup>
        </s:VGroup>
    </s:VGroup>

    <s:Image id="favoriteImage" top="20" right="20" click="toggleSelection(event)"/>

</s:GridItemRenderer>
