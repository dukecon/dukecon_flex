<?xml version="1.0"?>
<!--
  Created by christoferdutz on 06.07.15.
-->
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:s="library://ns.adobe.com/flex/spark"
        xmlns:parsley="http://www.spicefactory.org/parsley"
        title="{resourceManager.getString('dukecon', 'stream.title')}"
        creationComplete="onCreationComplete(event)">

    <fx:Metadata>
        [ResourceBundle("dukecon")]
    </fx:Metadata>

    <fx:Declarations>
        <parsley:FastInject injectionComplete="init()">
            <parsley:Inject property="eventService" type="{EventService}" />
            <parsley:Inject property="resourceService" type="{ResourceService}" />
            <parsley:Inject property="settingsService" type="{SettingsService}" />
        </parsley:FastInject>
    </fx:Declarations>

    <fx:Script>
        <![CDATA[
      import mx.events.FlexEvent;

      import org.dukecon.events.ListEvent;
      import org.dukecon.model.Track;
      import org.dukecon.services.EventService;
      import org.dukecon.services.ResourceService;
      import org.dukecon.services.SettingsService;
      import org.dukecon.utils.I18nHelper;

      protected var stream:Track;
      protected var _initialized:Boolean = false;

      public var eventService:EventService;
      public var resourceService:ResourceService;
      public var settingsService:SettingsService;

      protected function onCreationComplete(event:FlexEvent):void {
        talkList.addEventListener(ListEvent.ITEM_SELECTED, onStreamSelected);
      }

      [Bindable("dataChange")]
      override public function get data():Object {
        return super.data;
      }

      override public function set data(value:Object):void {
        super.data = value;
        stream = Track(data);
        update();
      }

      protected function init():void {
          _initialized = true;
          update();
      }

      protected function update():void {
          if(!_initialized) {
              return;
          }

          if (stream && eventService && resourceService) {
              streamIcon.source = resourceService.getIconForStream(stream.id);
              streamNameLabel.text = I18nHelper.getName(stream.names, resourceManager.localeChain[0],
                      stream.conference.metaData.defaultLanguage.id);
              talkList.dataProvider = eventService.getEventsForStream(settingsService.selectedConferenceId, stream);
          } else {
              streamIcon.source = null;
              streamNameLabel.text = null;
              talkList.dataProvider = null;
          }
      }

      protected function onStreamSelected(event:ListEvent):void {
        navigator.pushView(EventView, event.data);
      }
      ]]>
    </fx:Script>

    <s:navigationContent>
        <s:Button label="&lt;" click="{navigator.popView()}"/>
    </s:navigationContent>

    <s:Scroller width="100%" height="100%" horizontalScrollPolicy="off">
        <s:VGroup width="100%" padding="10" gap="30">
            <s:Group width="100%">
                <s:Rect top="4" left="4" right="4" height="150" radiusX="10" radiusY="10">
                    <s:fill>
                        <s:SolidColor color="0x1AA3B1"/>
                    </s:fill>
                </s:Rect>

                <s:Label id="streamNameLabel" top="22" left="20" width="440" styleName="title"/>

                <s:Rect top="20" right="20" width="120" height="120">
                    <s:fill>
                        <s:SolidColor color="0xffffff"/>
                    </s:fill>
                    <s:stroke>
                        <s:SolidColorStroke color="black"/>
                    </s:stroke>
                </s:Rect>

                <s:Image id="streamIcon" top="21" right="21" width="119" height="119"/>
            </s:Group>
            <s:List id="talkList" width="100%" height="100%"
                    itemRenderer="org.dukecon.itemrenderer.EventItemRenderer"/>
        </s:VGroup>
    </s:Scroller>

</s:View>
