<?xml version="1.0"?>
<!--
  Created by christoferdutz on 06.07.15.
-->
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:s="library://ns.adobe.com/flex/spark"
        xmlns:u="org.dukecon.utils.*">

    <fx:Declarations>
        <s:DateTimeFormatter id="startTimeFormatter" dateTimePattern="dd.MM.yyyy HH:mm"/>
        <s:DateTimeFormatter id="endTimeFormatter" dateTimePattern="HH:mm"/>
    </fx:Declarations>

    <fx:Script>
        <![CDATA[
        import org.dukecon.controller.ConferenceController;
        import org.dukecon.controller.TrackController;
        import org.dukecon.model.Talk;

        [Embed(source="/star-unselected.png")]
        [Bindable]
        public var starUnselected:Class;

        [Embed(source="/star-selected.png")]
        [Bindable]
        public var starSelected:Class;

        [Bindable]
        protected var talk:Talk;

        [Bindable]
        protected var language:String;

        [Bindable]
        protected var selectedIcon:Class;

        [Bindable]
        protected var trackIcon:Class;

        [Bindable]
        protected var speakers:String;



        [Bindable("dataChange")]
        override public function get data():Object {
            return super.data;
        }

        override public function set data(value:Object):void {
            super.data = value;
            talk = Talk(value);
            updateSelectionIcon();
            if (talk) {
                language = talk.language;
                trackIcon = TrackController.instance.getIconForTrack(talk.track);
            } else {
                language = null;
                trackIcon = null;
            }
            speakers = "";
            if (talk.speakers) {
                for each(var speaker:Object in talk.speakers) {
                    if (speaker) {
                        if (speakers.length > 0) {
                            speakers += " | ";
                        }
                        speakers += speaker.name + ", " + speaker.company;
                    }
                }
            }
            talk.speakers
            title = startTimeFormatter.format(talk.start) + " - " + endTimeFormatter.format(talk.end);
        }

        protected function updateSelectionIcon():void {
            if (talk) {
                selectedIcon = ConferenceController.instance.isTalkSelected(talk) ? starSelected : starUnselected;
            } else {
                selectedIcon = null;
            }
        }

        protected function toggleSelection(event:MouseEvent):void {
            var controller:ConferenceController = ConferenceController.instance;
            if (controller.isTalkSelected(talk)) {
                controller.unselectTalk(talk);
            } else {
                controller.selectTalk(talk);
            }
            updateSelectionIcon();
        }
        ]]>
    </fx:Script>

    <s:navigationContent>
        <s:Button label="&lt;" click="{navigator.popView()}"/>
    </s:navigationContent>

    <s:Scroller width="100%" height="100%" horizontalScrollPolicy="off">
        <s:VGroup width="100%" padding="10" gap="30">
            <s:Group width="100%">
                <s:Rect top="4" left="4" right="4" height="150" radiusX="10" radiusY="10" visible="{talk != null}">
                    <s:fill>
                        <s:SolidColor color="0x1AA3B1"/>
                    </s:fill>
                </s:Rect>

                <s:Label id="titleLabel" text="{talk.title}" top="20" left="20" width="440" styleName="title"/>

                <s:Rect top="20" right="100" width="64" height="64" visible="{talk != null}">
                    <s:fill>
                        <s:SolidColor color="0xffffff"/>
                    </s:fill>
                    <s:stroke>
                        <s:SolidColorStroke color="black"/>
                    </s:stroke>
                </s:Rect>

                <u:VectorImage source="{trackIcon}" top="22" right="100" width="64" height="64"/>

                <s:Image source="{selectedIcon}" top="20" right="20" click="toggleSelection(event)"/>

                <s:Image top="100" right="28" width="48" height="36" source="@Embed('/english-small.png')"
                         visible="{language == 'english'}"/>
            </s:Group>
            <s:Label text="{talk.abstractText}" styleName="content" width="{parent.width - 20}"/>
            <s:Label text="{speakers}" width="{parent.width - 20}" fontWeight="bold"/>
            <s:HGroup>
                <s:Label text="Zeit:" fontWeight="bold"/>
                <s:Label text="{startTimeFormatter.format(talk.start)} - {endTimeFormatter.format(talk.end)}" styleName="content"/>
            </s:HGroup>
            <s:HGroup>
                <s:Label text="Raum:" fontWeight="bold"/>
                <s:Label text="{talk.location}" styleName="content"/>
            </s:HGroup>
            <s:HGroup>
                <s:Label text="Track:" fontWeight="bold"/>
                <s:Label text="{talk.track}" styleName="content"/>
            </s:HGroup>
        </s:VGroup>
    </s:Scroller>

</s:View>
