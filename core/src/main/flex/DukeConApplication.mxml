<?xml version="1.0"?>
<s:TabbedViewNavigatorApplication
        xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:s="library://ns.adobe.com/flex/spark"
        preinitialize="onPreInitialize(event)"
        applicationDPI="320" frameRate="60">

    <fx:Metadata>
        [ResourceBundle("dukecon")]
    </fx:Metadata>

    <fx:Style source="DukeConStyle.css"/>

    <s:states>
        <s:State name="conferenceSelection"/>
        <s:State name="default"/>
    </s:states>

    <fx:Script>
        <![CDATA[
        import mx.events.FlexEvent;
        import mx.logging.Log;
        import mx.logging.LogEventLevel;
        import mx.logging.targets.TraceTarget;

        import org.dukecon.events.SettingsChangedEvent;

        import org.dukecon.services.SettingsService;
        import org.dukecon.views.SettingsView;
        import org.spicefactory.parsley.core.context.Context;
        import org.spicefactory.parsley.flex.FlexContextBuilder;

        private var installedLanguages:Array;
        private var settingsService:SettingsService;

        protected function onPreInitialize(event:FlexEvent):void {
            initLogging();
            var context:Context = FlexContextBuilder.build(DukeConContext, this);

            // Save the initial list of installed resources.
            settingsService = SettingsService(context.getObjectByType(SettingsService));
            if (settingsService) {
                settingsService.installedLanguages = resourceManager.localeChain;
                settingsService.addEventListener(SettingsChangedEvent.SETTINGS_CHANGED, onSettingsChanged);
            }
            updateState();
        }

        private static function initLogging():void {
            // Create a target.
            var logTarget:TraceTarget = new TraceTarget();

            // Set the log level.
            logTarget.level = LogEventLevel.INFO;

            // Add date, time, category, and log level to the output.
            logTarget.includeDate = true;
            logTarget.includeTime = true;
            logTarget.includeCategory = true;
            logTarget.includeLevel = true;

            // Begin logging.
            Log.addTarget(logTarget);
        }

        protected function updateState():void {
            currentState = (settingsService.selectedConferenceId) ? "default" : "conferenceSelection";
        }

        protected function onSettingsChanged(event:SettingsChangedEvent):void {
            updateState();
        }

        protected function onOpenSettingsClicked(event:MouseEvent):void {
            tabbedNavigator.activeView.navigator.pushView(SettingsView);
        }

        protected function onGoToMainClicked():void {
            tabbedNavigator.selectedIndex = 0;
        }

        ]]>
    </fx:Script>

    <s:ViewNavigator label="{resourceManager.getString('dukecon', 'conferences.title')}"
                     icon="@Embed('/conference.png')" includeIn="conferenceSelection"
                     firstView="org.dukecon.views.ConferencesView" width="100%" height="100%">
        <s:actionContent>
            <s:Button icon="@Embed('/settings.png')" name="settingsButton"
                      click="onOpenSettingsClicked(event)"/>
        </s:actionContent>
        <s:navigationContent>
            <s:Button icon="@Embed('/update.png')" click="{trace('Update')}"/>
        </s:navigationContent>
    </s:ViewNavigator>
    <s:ViewNavigator id="mainView" label="{resourceManager.getString('dukecon', 'main.title')}"
                     icon="@Embed('/conference.png')" includeIn="default"
                     firstView="org.dukecon.views.MainView" width="100%" height="100%">
        <s:actionContent>
            <s:Button icon="@Embed('/settings.png')" name="settingsButton"
                      click="onOpenSettingsClicked(event)"/>
        </s:actionContent>
        <s:navigationContent>
            <s:Button icon="@Embed('/exit.png')" click="{settingsService.selectedConferenceId = null}"/>
        </s:navigationContent>
    </s:ViewNavigator>
    <s:ViewNavigator label="{resourceManager.getString('dukecon', 'schedule.title')}"
                     icon="@Embed('/schedule.png')" includeIn="default"
                     firstView="org.dukecon.views.ScheduleView" width="100%" height="100%">
        <s:actionContent>
            <s:Button icon="@Embed('/settings.png')" name="settingsButton"
                      click="onOpenSettingsClicked(event)"/>
        </s:actionContent>
        <s:navigationContent>
            <s:Button label="&lt;" click="{onGoToMainClicked()}"/>
        </s:navigationContent>
    </s:ViewNavigator>
    <s:ViewNavigator label="{resourceManager.getString('dukecon', 'streams.title')}"
                     icon="@Embed('/stream.png')" includeIn="default"
                     firstView="org.dukecon.views.StreamsView" width="100%" height="100%">
        <s:actionContent>
            <s:Button icon="@Embed('/settings.png')" name="settingsButton"
                      click="onOpenSettingsClicked(event)"/>
        </s:actionContent>
        <s:navigationContent>
            <s:Button label="&lt;" click="{onGoToMainClicked()}"/>
        </s:navigationContent>
    </s:ViewNavigator>
    <s:ViewNavigator label="{resourceManager.getString('dukecon', 'locations.title')}"
                     icon="@Embed('/location.png')" includeIn="default"
                     firstView="org.dukecon.views.LocationsView" width="100%" height="100%">
        <s:actionContent>
            <s:Button icon="@Embed('/settings.png')" name="settingsButton"
                      click="onOpenSettingsClicked(event)"/>
        </s:actionContent>
        <s:navigationContent>
            <s:Button label="&lt;" click="{onGoToMainClicked()}"/>
        </s:navigationContent>
    </s:ViewNavigator>
    <s:ViewNavigator label="{resourceManager.getString('dukecon', 'speakers.title')}"
                     icon="@Embed('/speaker.png')" includeIn="default"
                     firstView="org.dukecon.views.SpeakersView" width="100%" height="100%">
        <s:actionContent>
            <s:Button icon="@Embed('/settings.png')" name="settingsButton"
                      click="onOpenSettingsClicked(event)"/>
        </s:actionContent>
        <s:navigationContent>
            <s:Button label="&lt;" click="{onGoToMainClicked()}"/>
        </s:navigationContent>
    </s:ViewNavigator>

</s:TabbedViewNavigatorApplication>
