/**
 * Generated by Gas3 v${gVersion} (Granite Data Services).
 *
 * NOTE: this file is only generated if it does not exist. You may safely put
 * your custom code here.
 */

package ${jClass.as3Type.packageName} {<%

    ///////////////////////////////////////////////////////////////////////////
    // Write Import Statements.

    if (jClass.hasInterfaces()) {
        Set as3Imports = new TreeSet();

        for (jProperty in jClass.interfacesProperties) {
            if (jProperty.as3Type.hasPackage() && jProperty.as3Type.packageName != jClass.as3Type.packageName)
                as3Imports.add(jProperty.as3Type.qualifiedName);
        }

        if (as3Imports.size() > 0) {%>
<%
        }
        for (as3Import in as3Imports) {%>
    import ${as3Import};<%
        }
    }%>

    [RemoteClass(alias="${jClass.qualifiedName}")]
    public class ${jClass.as3Type.name} extends ${jClass.as3Type.name}Base {

        public function ${jClass.as3Type.name}(obj:Object = null) {
            super();
        }
<%
    ///////////////////////////////////////////////////////////////////////////
    // (Re)Write Public Getters/Setters for Implemented Interfaces.

    if (jClass.hasInterfaces()) {
        for (jProperty in jClass.interfacesProperties) {
            if (jProperty.readable || jProperty.writable) {%>
<%
                if (jProperty.writable) {%>
        override public function set ${jProperty.name}(value:${jProperty.as3Type.name}):void {
            // Gas3 empty generated setter.
        }<%
                }
                if (jProperty.readable) {%>
        override public function get ${jProperty.name}():${jProperty.as3Type.name} {
            // Gas3 default generated getter.
            return ${jProperty.as3Type.nullValue};
        }<%
                }
            }
        }
    }%>
    }
}